<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WhatsApp Autoresponder Pro</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #25D366;
            --secondary-color: #128C7E;
            --dark-color: #075E54;
            --light-color: #DCF8C6;
            --gray-color: #ece5dd;
            --text-color: #4a4a4a;
            --white: #ffffff;
            --danger-color: #e74c3c;
            --warning-color: #f39c12;
            --gemini-color: #8e44ad;
            --openai-color: #10a37f;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: #f0f0f0;
            color: var(--text-color);
            line-height: 1.6;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        header {
            background: linear-gradient(135deg, var(--dark-color), var(--secondary-color));
            color: white;
            padding: 20px 0;
            border-radius: 10px;
            margin-bottom: 20px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        
        .header-content {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        
        .logo {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .logo i {
            font-size: 2.5rem;
        }
        
        .logo h1 {
            font-size: 1.8rem;
        }
        
        .status {
            display: flex;
            align-items: center;
            gap: 10px;
            background-color: rgba(255, 255, 255, 0.2);
            padding: 8px 15px;
            border-radius: 20px;
        }
        
        .status-indicator {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background-color: #4CAF50;
        }
        
        .tabs {
            display: flex;
            background-color: var(--white);
            border-radius: 10px;
            overflow: hidden;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        }
        
        .tab {
            flex: 1;
            text-align: center;
            padding: 15px;
            cursor: pointer;
            transition: background-color 0.3s;
            font-weight: 500;
        }
        
        .tab.active {
            background-color: var(--primary-color);
            color: white;
        }
        
        .tab-content {
            display: none;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .main-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }
        
        @media (max-width: 768px) {
            .main-content {
                grid-template-columns: 1fr;
            }
        }
        
        .card {
            background-color: var(--white);
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            margin-bottom: 20px;
        }
        
        .card h2 {
            color: var(--dark-color);
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .card h2 i {
            color: var(--primary-color);
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }
        
        input, textarea, select {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1rem;
        }
        
        textarea {
            min-height: 120px;
            resize: vertical;
        }
        
        .btn {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 500;
            transition: background-color 0.3s;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }
        
        .btn:hover {
            background-color: var(--secondary-color);
        }
        
        .btn-block {
            display: block;
            width: 100%;
        }
        
        .btn-secondary {
            background-color: #6c757d;
        }
        
        .btn-secondary:hover {
            background-color: #5a6268;
        }
        
        .btn-danger {
            background-color: var(--danger-color);
        }
        
        .btn-danger:hover {
            background-color: #c0392b;
        }
        
        .btn-warning {
            background-color: var(--warning-color);
        }
        
        .btn-warning:hover {
            background-color: #e67e22;
        }
        
        .btn-sm {
            padding: 8px 12px;
            font-size: 0.9rem;
        }
        
        .message-history {
            max-height: 400px;
            overflow-y: auto;
            border: 1px solid #eee;
            border-radius: 5px;
            padding: 10px;
            background-color: #f9f9f9;
        }
        
        .message {
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 10px;
            max-width: 80%;
        }
        
        .received {
            background-color: var(--white);
            border: 1px solid #eee;
            align-self: flex-start;
        }
        
        .sent {
            background-color: var(--light-color);
            align-self: flex-end;
            margin-left: auto;
        }
        
        .message-time {
            font-size: 0.7rem;
            color: #999;
            text-align: right;
            margin-top: 5px;
        }
        
        .settings-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }
        
        .toggle-switch {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 24px;
        }
        
        .toggle-switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }
        
        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 24px;
        }
        
        .slider:before {
            position: absolute;
            content: "";
            height: 16px;
            width: 16px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }
        
        input:checked + .slider {
            background-color: var(--primary-color);
        }
        
        input:checked + .slider:before {
            transform: translateX(26px);
        }
        
        .stats {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 15px;
            margin-top: 20px;
        }
        
        .stat-card {
            background-color: var(--white);
            border-radius: 8px;
            padding: 15px;
            text-align: center;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        }
        
        .stat-value {
            font-size: 1.8rem;
            font-weight: bold;
            color: var(--dark-color);
        }
        
        .stat-label {
            font-size: 0.9rem;
            color: #777;
        }
        
        footer {
            text-align: center;
            margin-top: 30px;
            padding: 20px;
            color: #777;
            font-size: 0.9rem;
        }
        
        .notification {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: var(--primary-color);
            color: white;
            padding: 15px 20px;
            border-radius: 5px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            display: flex;
            align-items: center;
            gap: 10px;
            z-index: 1000;
            transform: translateY(100px);
            opacity: 0;
            transition: transform 0.3s, opacity 0.3s;
        }
        
        .notification.show {
            transform: translateY(0);
            opacity: 1;
        }
        
        .contact-list {
            max-height: 300px;
            overflow-y: auto;
            border: 1px solid #eee;
            border-radius: 5px;
            padding: 10px;
            background-color: #f9f9f9;
        }
        
        .contact-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #eee;
        }
        
        .contact-item:last-child {
            border-bottom: none;
        }
        
        .contact-info {
            display: flex;
            flex-direction: column;
        }
        
        .contact-name {
            font-weight: 500;
        }
        
        .contact-number {
            font-size: 0.9rem;
            color: #777;
        }
        
        .contact-actions {
            display: flex;
            gap: 5px;
        }
        
        .file-upload {
            border: 2px dashed #ddd;
            border-radius: 5px;
            padding: 20px;
            text-align: center;
            margin-bottom: 15px;
            cursor: pointer;
            transition: border-color 0.3s;
        }
        
        .file-upload:hover {
            border-color: var(--primary-color);
        }
        
        .file-upload i {
            font-size: 2rem;
            color: var(--primary-color);
            margin-bottom: 10px;
        }
        
        .blacklist-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #eee;
        }
        
        .blacklist-item:last-child {
            border-bottom: none;
        }
        
        .custom-message-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #eee;
            background-color: #f9f9f9;
            margin-bottom: 10px;
            border-radius: 5px;
        }
        
        .custom-message-content {
            flex: 1;
        }
        
        .custom-message-trigger {
            font-weight: 500;
            color: var(--dark-color);
        }
        
        .custom-message-response {
            font-size: 0.9rem;
            color: #555;
        }
        
        .api-selector {
            display: flex;
            gap: 10px;
            margin-bottom: 15px;
        }
        
        .api-option {
            flex: 1;
            text-align: center;
            padding: 10px;
            border: 2px solid #ddd;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .api-option.active {
            border-color: var(--primary-color);
            background-color: rgba(37, 211, 102, 0.1);
        }
        
        .api-option.gemini.active {
            border-color: var(--gemini-color);
            background-color: rgba(142, 68, 173, 0.1);
        }
        
        .api-option.openai.active {
            border-color: var(--openai-color);
            background-color: rgba(16, 163, 127, 0.1);
        }
        
        .api-key-input {
            display: none;
        }
        
        .api-key-input.active {
            display: block;
        }
        
        .copyright {
            text-align: center;
            margin-top: 10px;
            font-size: 0.8rem;
            color: #777;
        }
        
        .whatsapp-link {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            background-color: var(--primary-color);
            color: white;
            text-decoration: none;
            padding: 10px 15px;
            border-radius: 5px;
            margin-top: 10px;
            transition: background-color 0.3s;
        }
        
        .whatsapp-link:hover {
            background-color: var(--secondary-color);
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="header-content">
                <div class="logo">
                    <i class="fab fa-whatsapp"></i>
                    <h1>WhatsApp Autoresponder Pro</h1>
                </div>
                <div class="status">
                    <div class="status-indicator"></div>
                    <span>Aktif</span>
                </div>
            </div>
        </header>
        
        <div class="tabs">
            <div class="tab active" data-tab="settings">Pengaturan</div>
            <div class="tab" data-tab="contacts">Kontak & Blacklist</div>
            <div class="tab" data-tab="custom-messages">Pesan Kustom</div>
            <div class="tab" data-tab="stats">Statistik</div>
        </div>
        
        <div class="tab-content active" id="settings">
            <div class="main-content">
                <div class="left-column">
                    <div class="card">
                        <h2><i class="fas fa-cogs"></i> Konfigurasi API</h2>
                        
                        <div class="api-selector">
                            <div class="api-option gemini active" data-api="gemini">
                                <i class="fas fa-robot"></i>
                                <div>Google Gemini</div>
                            </div>
                            <div class="api-option openai" data-api="openai">
                                <i class="fas fa-brain"></i>
                                <div>OpenAI</div>
                            </div>
                        </div>
                        
                        <div class="api-key-input active" id="gemini-key">
                            <div class="form-group">
                                <label for="gemini-api-key">Gemini API Key</label>
                                <input type="text" id="gemini-api-key" placeholder="Masukkan API Key Gemini...">
                            </div>
                        </div>
                        
                        <div class="api-key-input" id="openai-key">
                            <div class="form-group">
                                <label for="openai-api-key">OpenAI API Key</label>
                                <input type="text" id="openai-api-key" value="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">
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label for="response-type">Tipe Respons</label>
                            <select id="response-type">
                                <option value="auto">Otomatis (AI)</option>
                                <option value="custom">Kustom</option>
                                <option value="mixed">Campuran</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="default-response">Respons Default</label>
                            <textarea id="default-response" placeholder="Masukkan pesan balasan default di sini...">Halo! Terima kasih telah menghubungi. Saya sedang tidak tersedia saat ini, tetapi akan membalas pesan Anda segera.</textarea>
                        </div>
                        
                        <div class="form-group">
                            <label for="ai-instructions">Instruksi AI</label>
                            <textarea id="ai-instructions" placeholder="Instruksi khusus untuk AI...">Anda adalah asisten yang ramah dan membantu. Balas pesan dengan sopan dan informatif. Jika tidak yakin dengan jawabannya, minta penjelasan lebih lanjut.</textarea>
                        </div>
                        
                        <button class="btn btn-block" id="save-settings">
                            <i class="fas fa-save"></i> Simpan Pengaturan
                        </button>
                    </div>
                    
                    <div class="card">
                        <h2><i class="fas fa-sliders-h"></i> Pengaturan Lanjutan</h2>
                        <div class="settings-grid">
                            <div class="form-group">
                                <label>Aktifkan Autoresponder</label>
                                <label class="toggle-switch">
                                    <input type="checkbox" checked id="autoresponder-active">
                                    <span class="slider"></span>
                                </label>
                            </div>
                            
                            <div class="form-group">
                                <label>Balas Grup Chat</label>
                                <label class="toggle-switch">
                                    <input type="checkbox" id="reply-groups">
                                    <span class="slider"></span>
                                </label>
                            </div>
                            
                            <div class="form-group">
                                <label>Delay Respons (detik)</label>
                                <input type="number" value="5" min="0" max="60" id="response-delay">
                            </div>
                            
                            <div class="form-group">
                                <label>Maksimal Karakter</label>
                                <input type="number" value="500" min="50" max="2000" id="max-chars">
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="right-column">
                    <div class="card">
                        <h2><i class="fas fa-comments"></i> Preview Respons</h2>
                        <div class="message-history" id="message-history">
                            <div class="message received">
                                <p>Halo, apakah produk X masih tersedia?</p>
                                <div class="message-time">10:15</div>
                            </div>
                            <div class="message sent">
                                <p>Halo! Terima kasih telah menghubungi. Ya, produk X masih tersedia. Apakah Anda ingin informasi lebih lanjut?</p>
                                <div class="message-time">10:16</div>
                            </div>
                            <div class="message received">
                                <p>Berapa harganya dan apakah ada diskon?</p>
                                <div class="message-time">10:17</div>
                            </div>
                            <div class="message sent">
                                <p>Harga produk X adalah Rp 250.000. Saat ini kami sedang ada promo diskon 10% untuk pembelian di atas 2 item. Apakah ada yang bisa saya bantu lagi?</p>
                                <div class="message-time">10:18</div>
                            </div>
                        </div>
                        
                        <div class="form-group" style="margin-top: 15px;">
                            <input type="text" id="test-message" placeholder="Ketik pesan untuk menguji autoresponder...">
                        </div>
                        <button class="btn btn-block" id="test-response">
                            <i class="fas fa-paper-plane"></i> Kirim Pesan Uji
                        </button>
                    </div>
                    
                    <div class="card">
                        <h2><i class="fas fa-headset"></i> Dukungan</h2>
                        <p>Butuh bantuan dengan autoresponder ini?</p>
                        <a href="https://wa.me/qr/ZRBUOQMCOHR3M1" class="whatsapp-link" target="_blank">
                            <i class="fab fa-whatsapp"></i> Hubungi Sky via WhatsApp
                        </a>
                        <div class="copyright">Copyright by: Sky</div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="tab-content" id="contacts">
            <div class="main-content">
                <div class="left-column">
                    <div class="card">
                        <h2><i class="fas fa-users"></i> Import Kontak WhatsApp</h2>
                        <div class="file-upload" id="contact-upload">
                            <i class="fas fa-file-upload"></i>
                            <p>Klik untuk upload file kontak (format .txt, .csv, atau .vcf)</p>
                            <input type="file" id="contact-file" style="display: none;" accept=".txt,.csv,.vcf">
                        </div>
                        
                        <div class="form-group">
                            <label for="manual-contact">Tambah Kontak Manual</label>
                            <div style="display: flex; gap: 10px;">
                                <input type="text" id="contact-name" placeholder="Nama kontak">
                                <input type="text" id="contact-number" placeholder="Nomor WhatsApp">
                                <button class="btn" id="add-contact">
                                    <i class="fas fa-plus"></i> Tambah
                                </button>
                            </div>
                        </div>
                        
                        <div class="contact-list" id="contact-list">
                            <!-- Kontak akan ditambahkan di sini secara dinamis -->
                        </div>
                    </div>
                </div>
                
                <div class="right-column">
                    <div class="card">
                        <h2><i class="fas fa-ban"></i> Daftar Blacklist</h2>
                        <p style="margin-bottom: 15px;">Nomor dalam daftar blacklist tidak akan menerima balasan otomatis.</p>
                        
                        <div class="form-group">
                            <label for="blacklist-number">Tambah ke Blacklist</label>
                            <div style="display: flex; gap: 10px;">
                                <input type="text" id="blacklist-number" placeholder="Nomor WhatsApp">
                                <button class="btn btn-warning" id="add-blacklist">
                                    <i class="fas fa-ban"></i> Blacklist
                                </button>
                            </div>
                        </div>
                        
                        <div class="contact-list" id="blacklist">
                            <!-- Item blacklist akan ditambahkan di sini secara dinamis -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="tab-content" id="custom-messages">
            <div class="main-content">
                <div class="left-column">
                    <div class="card">
                        <h2><i class="fas fa-comment-dots"></i> Tambah Pesan Kustom</h2>
                        <div class="form-group">
                            <label for="trigger-phrase">Frase Pemicu</label>
                            <input type="text" id="trigger-phrase" placeholder="Kata kunci yang memicu pesan kustom">
                        </div>
                        
                        <div class="form-group">
                            <label for="custom-response">Respons Kustom</label>
                            <textarea id="custom-response-text" placeholder="Pesan balasan kustom..."></textarea>
                        </div>
                        
                        <div class="form-group">
                            <label>
                                <input type="checkbox" id="disable-ai"> Nonaktifkan AI untuk pesan ini
                            </label>
                        </div>
                        
                        <button class="btn btn-block" id="add-custom-message">
                            <i class="fas fa-plus"></i> Tambah Pesan Kustom
                        </button>
                    </div>
                </div>
                
                <div class="right-column">
                    <div class="card">
                        <h2><i class="fas fa-list"></i> Daftar Pesan Kustom</h2>
                        <p style="margin-bottom: 15px;">Pesan kustom akan diprioritaskan di atas respons AI.</p>
                        
                        <div id="custom-messages-list">
                            <!-- Pesan kustom akan ditambahkan di sini secara dinamis -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="tab-content" id="stats">
            <div class="main-content">
                <div class="left-column">
                    <div class="card">
                        <h2><i class="fas fa-chart-bar"></i> Statistik Penggunaan</h2>
                        <div class="stats">
                            <div class="stat-card">
                                <div class="stat-value" id="stat-replied">142</div>
                                <div class="stat-label">Pesan Dibalas</div>
                            </div>
                            <div class="stat-card">
                                <div class="stat-value" id="stat-response-rate">87%</div>
                                <div class="stat-label">Tingkat Respons</div>
                            </div>
                            <div class="stat-card">
                                <div class="stat-value" id="stat-active">24</div>
                                <div class="stat-label">Percakapan Aktif</div>
                            </div>
                        </div>
                        
                        <div class="stats" style="margin-top: 15px;">
                            <div class="stat-card">
                                <div class="stat-value" id="stat-custom">15</div>
                                <div class="stat-label">Pesan Kustom</div>
                            </div>
                            <div class="stat-card">
                                <div class="stat-value" id="stat-blacklist">8</div>
                                <div class="stat-label">Kontak Blacklist</div>
                            </div>
                            <div class="stat-card">
                                <div class="stat-value" id="stat-contacts">56</div>
                                <div class="stat-label">Kontak Aktif</div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="right-column">
                    <div class="card">
                        <h2><i class="fas fa-cog"></i> Aksi</h2>
                        <div style="display: flex; flex-direction: column; gap: 10px;">
                            <button class="btn btn-secondary" id="reset-stats">
                                <i class="fas fa-history"></i> Reset Statistik
                            </button>
                            <button class="btn" id="export-data">
                                <i class="fas fa-download"></i> Ekspor Data
                            </button>
                            <button class="btn btn-danger" id="clear-data">
                                <i class="fas fa-trash"></i> Hapus Semua Data
                            </button>
                        </div>
                    </div>
                    
                    <div class="card">
                        <h2><i class="fas fa-info-circle"></i> Informasi</h2>
                        <p style="margin-bottom: 10px;">Aplikasi WhatsApp Autoresponder Pro memungkinkan Anda:</p>
                        <ul style="padding-left: 20px; margin-bottom: 15px;">
                            <li>Membalas pesan otomatis dengan AI (Gemini atau OpenAI)</li>
                            <li>Mengimpor kontak dari file</li>
                            <li>Membuat daftar blacklist</li>
                            <li>Membuat pesan kustom dengan pemicu tertentu</li>
                            <li>Menonaktifkan AI untuk pesan kustom</li>
                        </ul>
                        <p>Gunakan tab di atas untuk mengelola berbagai fitur aplikasi.</p>
                    </div>
                </div>
            </div>
        </div>
        
        <footer>
            <p>WhatsApp Autoresponder Pro &copy; 2023 - Copyright by: Sky</p>
        </footer>
    </div>
    
    <div class="notification" id="notification">
        <i class="fas fa-check-circle"></i>
        <span id="notification-text">Pengaturan berhasil disimpan!</span>
    </div>

    <script>
        // Data aplikasi
        const appData = {
            contacts: [],
            blacklist: [],
            customMessages: [],
            stats: {
                replied: 142,
                responseRate: 87,
                active: 24,
                custom: 15,
                blacklist: 8,
                contacts: 56
            },
            settings: {
                activeAPI: 'gemini',
                geminiKey: '',
                openaiKey: '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',
                responseType: 'auto',
                defaultResponse: 'Halo! Terima kasih telah menghubungi. Saya sedang tidak tersedia saat ini, tetapi akan membalas pesan Anda segera.',
                aiInstructions: 'Anda adalah asisten yang ramah dan membantu. Balas pesan dengan sopan dan informatif. Jika tidak yakin dengan jawabannya, minta penjelasan lebih lanjut.',
                autoresponderActive: true,
                replyGroups: false,
                responseDelay: 5,
                maxChars: 500
            }
        };

        // Inisialisasi aplikasi
        document.addEventListener('DOMContentLoaded', function() {
            loadAppData();
            initializeEventListeners();
            updateStatsDisplay();
            renderContactList();
            renderBlacklist();
            renderCustomMessages();
        });

        // Muat data dari localStorage
        function loadAppData() {
            const savedData = localStorage.getItem('whatsappAutoresponderData');
            if (savedData) {
                const parsedData = JSON.parse(savedData);
                Object.assign(appData, parsedData);
                
                // Update UI dengan data yang dimuat
                document.getElementById('gemini-api-key').value = appData.settings.geminiKey;
                document.getElementById('openai-api-key').value = appData.settings.openaiKey;
                document.getElementById('response-type').value = appData.settings.responseType;
                document.getElementById('default-response').value = appData.settings.defaultResponse;
                document.getElementById('ai-instructions').value = appData.settings.aiInstructions;
                document.getElementById('autoresponder-active').checked = appData.settings.autoresponderActive;
                document.getElementById('reply-groups').checked = appData.settings.replyGroups;
                document.getElementById('response-delay').value = appData.settings.responseDelay;
                document.getElementById('max-chars').value = appData.settings.maxChars;
                
                // Set API aktif
                setActiveAPI(appData.settings.activeAPI);
            }
        }

        // Simpan data ke localStorage
        function saveAppData() {
            localStorage.setItem('whatsappAutoresponderData', JSON.stringify(appData));
        }

        // Inisialisasi event listeners
        function initializeEventListeners() {
            // Tab functionality
            document.querySelectorAll('.tab').forEach(tab => {
                tab.addEventListener('click', () => {
                    // Remove active class from all tabs and contents
                    document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
                    document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
                    
                    // Add active class to clicked tab and corresponding content
                    tab.classList.add('active');
                    document.getElementById(tab.dataset.tab).classList.add('active');
                });
            });
            
            // API selector
            document.querySelectorAll('.api-option').forEach(option => {
                option.addEventListener('click', function() {
                    document.querySelectorAll('.api-option').forEach(o => o.classList.remove('active'));
                    this.classList.add('active');
                    
                    const api = this.dataset.api;
                    setActiveAPI(api);
                    appData.settings.activeAPI = api;
                    saveAppData();
                });
            });
            
            // File upload for contacts
            document.getElementById('contact-upload').addEventListener('click', () => {
                document.getElementById('contact-file').click();
            });
            
            document.getElementById('contact-file').addEventListener('change', function(e) {
                if (this.files && this.files[0]) {
                    const fileName = this.files[0].name;
                    showNotification(`File ${fileName} berhasil diupload!`);
                    // In a real app, you would process the file here
                }
            });
            
            // Add contact manually
            document.getElementById('add-contact').addEventListener('click', addContact);
            
            // Add to blacklist
            document.getElementById('add-blacklist').addEventListener('click', addToBlacklist);
            
            // Add custom message
            document.getElementById('add-custom-message').addEventListener('click', addCustomMessage);
            
            // Save settings
            document.getElementById('save-settings').addEventListener('click', saveSettings);
            
            // Test response
            document.getElementById('test-response').addEventListener('click', testResponse);
            
            // Reset stats
            document.getElementById('reset-stats').addEventListener('click', resetStats);
            
            // Export data
            document.getElementById('export-data').addEventListener('click', exportData);
            
            // Clear data
            document.getElementById('clear-data').addEventListener('click', clearData);
            
            // Update settings on change
            document.getElementById('response-type').addEventListener('change', function() {
                appData.settings.responseType = this.value;
                saveAppData();
            });
            
            document.getElementById('default-response').addEventListener('input', function() {
                appData.settings.defaultResponse = this.value;
                saveAppData();
            });
            
            document.getElementById('ai-instructions').addEventListener('input', function() {
                appData.settings.aiInstructions = this.value;
                saveAppData();
            });
            
            document.getElementById('autoresponder-active').addEventListener('change', function() {
                appData.settings.autoresponderActive = this.checked;
                saveAppData();
            });
            
            document.getElementById('reply-groups').addEventListener('change', function() {
                appData.settings.replyGroups = this.checked;
                saveAppData();
            });
            
            document.getElementById('response-delay').addEventListener('input', function() {
                appData.settings.responseDelay = parseInt(this.value);
                saveAppData();
            });
            
            document.getElementById('max-chars').addEventListener('input', function() {
                appData.settings.maxChars = parseInt(this.value);
                saveAppData();
            });
            
            // Update API keys on input
            document.getElementById('gemini-api-key').addEventListener('input', function() {
                appData.settings.geminiKey = this.value;
                saveAppData();
            });
            
            document.getElementById('openai-api-key').addEventListener('input', function() {
                appData.settings.openaiKey = this.value;
                saveAppData();
            });
        }

        // Set active API
        function setActiveAPI(api) {
            document.querySelectorAll('.api-key-input').forEach(input => {
                input.classList.remove('active');
            });
            document.getElementById(`${api}-key`).classList.add('active');
        }

        // Add contact
        function addContact() {
            const name = document.getElementById('contact-name').value;
            const number = document.getElementById('contact-number').value;
            
            if (!name || !number) {
                showNotification('Harap isi nama dan nomor kontak!', 'error');
                return;
            }
            
            // Check if contact already exists
            if (appData.contacts.some(contact => contact.number === number)) {
                showNotification('Kontak dengan nomor ini sudah ada!', 'error');
                return;
            }
            
            const contact = { name, number };
            appData.contacts.push(contact);
            saveAppData();
            renderContactList();
            
            document.getElementById('contact-name').value = '';
            document.getElementById('contact-number').value = '';
            showNotification('Kontak berhasil ditambahkan!');
            
            // Update stats
            appData.stats.contacts = appData.contacts.length;
            updateStatsDisplay();
            saveAppData();
        }

        // Remove contact
        function removeContact(index) {
            appData.contacts.splice(index, 1);
            saveAppData();
            renderContactList();
            showNotification('Kontak berhasil dihapus!');
            
            // Update stats
            appData.stats.contacts = appData.contacts.length;
            updateStatsDisplay();
            saveAppData();
        }

        // Render contact list
        function renderContactList() {
            const contactList = document.getElementById('contact-list');
            contactList.innerHTML = '';
            
            if (appData.contacts.length === 0) {
                contactList.innerHTML = '<p style="text-align: center; color: #777;">Tidak ada kontak</p>';
                return;
            }
            
            appData.contacts.forEach((contact, index) => {
                const contactItem = document.createElement('div');
                contactItem.className = 'contact-item';
                contactItem.innerHTML = `
                    <div class="contact-info">
                        <div class="contact-name">${contact.name}</div>
                        <div class="contact-number">${contact.number}</div>
                    </div>
                    <div class="contact-actions">
                        <button class="btn btn-danger btn-sm" onclick="removeContact(${index})">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                `;
                contactList.appendChild(contactItem);
            });
        }

        // Add to blacklist
        function addToBlacklist() {
            const number = document.getElementById('blacklist-number').value;
            
            if (!number) {
                showNotification('Harap isi nomor untuk blacklist!', 'error');
                return;
            }
            
            // Check if number already in blacklist
            if (appData.blacklist.includes(number)) {
                showNotification('Nomor ini sudah ada di blacklist!', 'error');
                return;
            }
            
            appData.blacklist.push(number);
            saveAppData();
            renderBlacklist();
            
            document.getElementById('blacklist-number').value = '';
            showNotification('Nomor berhasil ditambahkan ke blacklist!');
            
            // Update stats
            appData.stats.blacklist = appData.blacklist.length;
            updateStatsDisplay();
            saveAppData();
        }

        // Remove from blacklist
        function removeFromBlacklist(index) {
            appData.blacklist.splice(index, 1);
            saveAppData();
            renderBlacklist();
            showNotification('Nomor berhasil dihapus dari blacklist!');
            
            // Update stats
            appData.stats.blacklist = appData.blacklist.length;
            updateStatsDisplay();
            saveAppData();
        }

        // Render blacklist
        function renderBlacklist() {
            const blacklist = document.getElementById('blacklist');
            blacklist.innerHTML = '';
            
            if (appData.blacklist.length === 0) {
                blacklist.innerHTML = '<p style="text-align: center; color: #777;">Tidak ada nomor di blacklist</p>';
                return;
            }
            
            appData.blacklist.forEach((number, index) => {
                const blacklistItem = document.createElement('div');
                blacklistItem.className = 'blacklist-item';
                blacklistItem.innerHTML = `
                    <div class="contact-info">
                        <div class="contact-number">${number}</div>
                    </div>
                    <div class="contact-actions">
                        <button class="btn btn-danger btn-sm" onclick="removeFromBlacklist(${index})">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                `;
                blacklist.appendChild(blacklistItem);
            });
        }

        // Add custom message
        function addCustomMessage() {
            const trigger = document.getElementById('trigger-phrase').value;
            const response = document.getElementById('custom-response-text').value;
            const disableAI = document.getElementById('disable-ai').checked;
            
            if (!trigger || !response) {
                showNotification('Harap isi frase pemicu dan respons!', 'error');
                return;
            }
            
            const customMessage = {
                trigger,
                response,
                disableAI
            };
            
            appData.customMessages.push(customMessage);
            saveAppData();
            renderCustomMessages();
            
            document.getElementById('trigger-phrase').value = '';
            document.getElementById('custom-response-text').value = '';
            document.getElementById('disable-ai').checked = false;
            showNotification('Pesan kustom berhasil ditambahkan!');
            
            // Update stats
            appData.stats.custom = appData.customMessages.length;
            updateStatsDisplay();
            saveAppData();
        }

        // Remove custom message
        function removeCustomMessage(index) {
            appData.customMessages.splice(index, 1);
            saveAppData();
            renderCustomMessages();
            showNotification('Pesan kustom berhasil dihapus!');
            
            // Update stats
            appData.stats.custom = appData.customMessages.length;
            updateStatsDisplay();
            saveAppData();
        }

        // Render custom messages
        function renderCustomMessages() {
            const customMessagesList = document.getElementById('custom-messages-list');
            customMessagesList.innerHTML = '';
            
            if (appData.customMessages.length === 0) {
                customMessagesList.innerHTML = '<p style="text-align: center; color: #777;">Tidak ada pesan kustom</p>';
                return;
            }
            
            appData.customMessages.forEach((message, index) => {
                const messageItem = document.createElement('div');
                messageItem.className = 'custom-message-item';
                messageItem.innerHTML = `
                    <div class="custom-message-content">
                        <div class="custom-message-trigger">Pemicu: ${message.trigger}</div>
                        <div class="custom-message-response">Respons: ${message.response}</div>
                        ${message.disableAI ? '<div style="font-size: 0.8rem; color: #e74c3c; margin-top: 5px;"><i class="fas fa-robot"></i> AI Dinonaktifkan</div>' : ''}
                    </div>
                    <div class="contact-actions">
                        <button class="btn btn-danger btn-sm" onclick="removeCustomMessage(${index})">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                `;
                customMessagesList.appendChild(messageItem);
            });
        }

        // Save settings
        function saveSettings() {
            // Settings are already saved automatically via event listeners
            showNotification('Pengaturan berhasil disimpan!');
        }

        // Test response
        function testResponse() {
            const testMessage = document.getElementById('test-message').value;
            if (!testMessage.trim()) {
                showNotification('Silakan ketik pesan uji terlebih dahulu!', 'error');
                return;
            }
            
            const messageHistory = document.getElementById('message-history');
            
            // Add received message
            const receivedMessage = document.createElement('div');
            receivedMessage.className = 'message received';
            receivedMessage.innerHTML = `
                <p>${testMessage}</p>
                <div class="message-time">${getCurrentTime()}</div>
            `;
            messageHistory.appendChild(receivedMessage);
            
            // Simulate delay before response
            setTimeout(() => {
                // Add response message
                const sentMessage = document.createElement('div');
                sentMessage.className = 'message sent';
                
                // Check if there's a custom message for this trigger
                let responseText = '';
                let foundCustomMessage = false;
                
                for (let message of appData.customMessages) {
                    if (testMessage.toLowerCase().includes(message.trigger.toLowerCase())) {
                        responseText = message.response;
                        foundCustomMessage = true;
                        break;
                    }
                }
                
                // If no custom message, use AI or default response
                if (!foundCustomMessage) {
                    const responseType = appData.settings.responseType;
                    
                    if (responseType === 'custom') {
                        responseText = appData.settings.defaultResponse;
                    } else {
                        // Simulate AI response
                        responseText = generateAIResponse(testMessage);
                    }
                }
                
                sentMessage.innerHTML = `
                    <p>${responseText}</p>
                    <div class="message-time">${getCurrentTime()}</div>
                `;
                messageHistory.appendChild(sentMessage);
                
                // Scroll to bottom
                messageHistory.scrollTop = messageHistory.scrollHeight;
                
                // Update stats
                appData.stats.replied++;
                appData.stats.active++;
                updateStatsDisplay();
                saveAppData();
                
                // Show notification
                showNotification('Pesan berhasil dibalas!');
                
            }, appData.settings.responseDelay * 1000);
            
            // Clear input
            document.getElementById('test-message').value = '';
            
            // Scroll to bottom
            messageHistory.scrollTop = messageHistory.scrollHeight;
        }

        // Generate AI response (simulation)
        function generateAIResponse(message) {
            // In a real app, this would call the actual API
            const responses = [
                "Terima kasih atas pesan Anda! Saya akan membalas segera setelah memeriksa informasi yang diperlukan.",
                "Halo! Terima kasih telah menghubungi. Bagaimana saya bisa membantu Anda hari ini?",
                "Pesan Anda telah diterima. Mohon tunggu sebentar, saya akan segera merespons.",
                "Terima kasih telah menghubungi layanan kami. Apakah ada yang bisa saya bantu?",
                "Hai! Saya sedang tidak tersedia saat ini, tetapi akan membalas pesan Anda sesegera mungkin."
            ];
            
            // If message contains specific keywords, provide more specific response
            if (message.toLowerCase().includes('harga') || message.toLowerCase().includes('biaya')) {
                return "Untuk informasi harga terbaru, silakan kunjungi situs web kami atau hubungi customer service kami di nomor 08123456789.";
            } else if (message.toLowerCase().includes('stok') || message.toLowerCase().includes('tersedia')) {
                return "Untuk informasi ketersediaan stok, mohon berikan detail produk yang Anda minati sehingga saya dapat memeriksanya untuk Anda.";
            } else if (message.toLowerCase().includes('pesan') || message.toLowerCase().includes('order')) {
                return "Untuk melakukan pemesanan, silakan kunjungi situs web kami atau hubungi kami langsung. Terima kasih!";
            }
            
            // Otherwise, return random response
            return responses[Math.floor(Math.random() * responses.length)];
        }

        // Reset stats
        function resetStats() {
            if (confirm('Apakah Anda yakin ingin mereset semua statistik?')) {
                appData.stats = {
                    replied: 0,
                    responseRate: 0,
                    active: 0,
                    custom: appData.customMessages.length,
                    blacklist: appData.blacklist.length,
                    contacts: appData.contacts.length
                };
                updateStatsDisplay();
                saveAppData();
                showNotification('Statistik berhasil direset!');
            }
        }

        // Export data
        function exportData() {
            const dataStr = JSON.stringify(appData, null, 2);
            const dataBlob = new Blob([dataStr], {type: 'application/json'});
            
            const link = document.createElement('a');
            link.href = URL.createObjectURL(dataBlob);
            link.download = 'whatsapp-autoresponder-data.json';
            link.click();
            
            showNotification('Data berhasil diekspor!');
        }

        // Clear data
        function clearData() {
            if (confirm('Apakah Anda yakin ingin menghapus semua data? Tindakan ini tidak dapat dibatalkan!')) {
                localStorage.removeItem('whatsappAutoresponderData');
                location.reload();
            }
        }

        // Update stats display
        function updateStatsDisplay() {
            document.getElementById('stat-replied').textContent = appData.stats.replied;
            document.getElementById('stat-response-rate').textContent = appData.stats.responseRate + '%';
            document.getElementById('stat-active').textContent = appData.stats.active;
            document.getElementById('stat-custom').textContent = appData.stats.custom;
            document.getElementById('stat-blacklist').textContent = appData.stats.blacklist;
            document.getElementById('stat-contacts').textContent = appData.stats.contacts;
        }

        // Function to get current time
        function getCurrentTime() {
            const now = new Date();
            return `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;
        }

        // Function to show notification
        function showNotification(message, type = 'success') {
            const notification = document.getElementById('notification');
            const notificationText = document.getElementById('notification-text');
            
            notificationText.textContent = message;
            
            // Change color based on type
            if (type === 'error') {
                notification.style.backgroundColor = 'var(--danger-color)';
            } else if (type === 'warning') {
                notification.style.backgroundColor = 'var(--warning-color)';
            } else {
                notification.style.backgroundColor = 'var(--primary-color)';
            }
            
            notification.classList.add('show');
            
            setTimeout(() => {
                notification.classList.remove('show');
            }, 3000);
        }
    </script>
</body>
</html>
